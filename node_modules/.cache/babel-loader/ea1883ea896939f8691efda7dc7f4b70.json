{"ast":null,"code":"import _classCallCheck from \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mistypacaco/Documents/assessment---todo-app-part-3/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./TodoList.js\";\nimport { connect } from \"react-redux\";\nimport { addTodo, clearCompletedTodos, toggleTodo } from \"./actions\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: todosList\n    };\n\n    _this.handleRemoveChecked = function (event) {\n      _this.props.clearCompletedTodos();\n    };\n\n    _this.handleToggleComplete = function (event, todoIdToToggle) {\n      _this.props.toggleTodo();\n    };\n\n    _this.handleCreateTodo = function (event) {\n      if (event.key === \"Enter\") {\n        _this.props.addTodo(event.target.value);\n\n        event.target.value = \"\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleItemsLeft\",\n    value: function handleItemsLeft() {\n      var itemsLeftArray = this.state.todos.filter(function (todo) {\n        if (todo.completed === true) {\n          return false;\n        }\n\n        return true;\n      });\n      return itemsLeftArray.length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"todoapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"todos\"), React.createElement(\"input\", {\n        className: \"new-todo\",\n        placeholder: \"What needs to be done?\",\n        onKeyDown: this.handleCreateTodo,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(TodoList, {\n        todos: this.props.todos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/active\",\n        render: function render() {\n          return React.createElement(TodoList, {\n            todos: _this2.props.todos.filter(function (todo) {\n              return todo.completed === false;\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/completed\",\n        render: function render() {\n          return React.createElement(TodoList, {\n            todos: _this2.props.todos.filter(function (todo) {\n              if (todo.completed === false) {\n                return false;\n              }\n\n              return true;\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.handleItemsLeft()), \" item(s) left\"), React.createElement(\"ul\", {\n        className: \"filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        activeClassName: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"All\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: \"/active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Active\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        activeClassName: \"selected\",\n        to: \"/completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Completed\"))), React.createElement(\"button\", {\n        className: \"clear-completed\",\n        onClick: this.handleRemoveChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Clear completed\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: state.todos\n  };\n};\n\nvar mapDispatchToProps = {\n  addTodo: addTodo,\n  clearCompletedTodos: clearCompletedTodos,\n  toggleTodo: toggleTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mistypacaco/Documents/assessment---todo-app-part-3/src/App.js"],"names":["React","Component","todosList","Route","NavLink","TodoList","connect","addTodo","clearCompletedTodos","toggleTodo","App","state","todos","handleRemoveChecked","event","props","handleToggleComplete","todoIdToToggle","handleCreateTodo","key","target","value","itemsLeftArray","filter","todo","completed","length","handleItemsLeft","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./TodoList.js\";\nimport { connect } from \"react-redux\";\nimport {\n  addTodo,\n  clearCompletedTodos,\n  toggleTodo\n} from \"./actions\";\nclass App extends Component {\n  state = {\n    todos: todosList\n  };\n  handleRemoveChecked = event => {\n    this.props.clearCompletedTodos();\n  };\n  handleToggleComplete = (event, todoIdToToggle) => {\n    this.props.toggleTodo();\n  };\n  handleCreateTodo = event => {\n    if (event.key === \"Enter\") {\n      this.props.addTodo(event.target.value);\n      event.target.value = \"\";\n    }\n  };\n  handleItemsLeft() {\n    let itemsLeftArray = this.state.todos.filter(todo => {\n      if (todo.completed === true) {\n        return false;\n      }\n      return true;\n    });\n    return itemsLeftArray.length;\n  }\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown={this.handleCreateTodo}\n            autoFocus\n          />\n        </header>\n        <Route exact path=\"/\">\n          <TodoList todos={this.props.todos} />\n        </Route>\n        <Route\n          exact\n          path=\"/active\"\n          render={() => (\n            <TodoList\n              todos={this.props.todos.filter(todo => todo.completed === false)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/completed\"\n          render={() => (\n            <TodoList\n              todos={this.props.todos.filter(todo => {\n                if (todo.completed === false) {\n                  return false;\n                }\n                return true;\n              })}\n            />\n          )}\n        />\n        <footer className=\"footer\">\n          {/* <!-- This should be `0 items left` by default --> */}\n          <span className=\"todo-count\">\n            <strong>{this.handleItemsLeft()}</strong> item(s) left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <NavLink exact to=\"/\" activeClassName=\"selected\">\n                All\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"selected\" to=\"/active\">\n                Active\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"selected\" to=\"/completed\">\n                Completed\n              </NavLink>\n            </li>\n          </ul>\n          <button\n            className=\"clear-completed\"\n            onClick={this.handleRemoveChecked}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\nconst mapDispatchToProps = {\n  addTodo,\n  clearCompletedTodos,\n  toggleTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}