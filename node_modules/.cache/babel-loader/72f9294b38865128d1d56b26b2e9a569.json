{"ast":null,"code":"import _classCallCheck from \"/Users/mistypacaco/Desktop/todo3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mistypacaco/Desktop/todo3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mistypacaco/Desktop/todo3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mistypacaco/Desktop/todo3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mistypacaco/Desktop/todo3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mistypacaco/Desktop/todo3/src/toDoList.js\";\nimport React, { Component } from \"react\";\nimport TodoItem from \"./toDoItem.js\";\nimport { connect } from \"react-redux\";\nimport { deleteTodo, toggleTodo } from \"./actions\";\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    _classCallCheck(this, TodoList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoList).apply(this, arguments));\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"section\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, this.props.todos.map(function (todo) {\n        return React.createElement(TodoItem, {\n          key: todo.id,\n          title: todo.title,\n          completed: todo.completed,\n          id: todo.id,\n          handleToggleComplete: function handleToggleComplete(event) {\n            return _this.props.toggleTodo(todo.id);\n          },\n          handleDeleteTodo: function handleDeleteTodo(event) {\n            return _this.props.deleteTodo(todo.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nvar mapDispatchToProps = {\n  deleteTodo: deleteTodo,\n  toggleTodo: toggleTodo\n};\nexport default connect(null, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/mistypacaco/Desktop/todo3/src/toDoList.js"],"names":["React","Component","TodoItem","connect","deleteTodo","toggleTodo","TodoList","props","todos","map","todo","id","title","completed","event","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;;IACMC,Q;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,SAAS,EAAEF,IAAI,CAACG,SAHlB;AAIE,UAAA,EAAE,EAAEH,IAAI,CAACC,EAJX;AAKE,UAAA,oBAAoB,EAAE,8BAAAG,KAAK;AAAA,mBAAI,KAAI,CAACP,KAAL,CAAWF,UAAX,CAAsBK,IAAI,CAACC,EAA3B,CAAJ;AAAA,WAL7B;AAME,UAAA,gBAAgB,EAAE,0BAAAG,KAAK;AAAA,mBACrB,KAAI,CAACP,KAAL,CAAWH,UAAX,CAAsBM,IAAI,CAACC,EAA3B,CADqB;AAAA,WANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CADH,CADF,CADF;AAkBD;;;;EApBoBV,S;;AAsBvB,IAAMc,kBAAkB,GAAG;AACzBX,EAAAA,UAAU,EAAVA,UADyB;AAEzBC,EAAAA,UAAU,EAAVA;AAFyB,CAA3B;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TodoItem from \"./toDoItem.js\";\nimport { connect } from \"react-redux\";\nimport { deleteTodo, toggleTodo } from \"./actions\";\nclass TodoList extends Component {\n  render() {\n    return (\n      <section className=\"main\">\n        <ul className=\"todo-list\">\n          {this.props.todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              title={todo.title}\n              completed={todo.completed}\n              id={todo.id}\n              handleToggleComplete={event => this.props.toggleTodo(todo.id)}\n              handleDeleteTodo={event =>\n                this.props.deleteTodo(todo.id)\n              }\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  deleteTodo,\n  toggleTodo\n};\nexport default connect(null, mapDispatchToProps)(TodoList);\n"]},"metadata":{},"sourceType":"module"}