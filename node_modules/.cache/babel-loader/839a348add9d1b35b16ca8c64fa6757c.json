{"ast":null,"code":"import todosList from \"./todos.json\";\nimport { ADD_TODO, TOGGLE_TODO, DELETE_TODO, CLEAR_COMPLETED_TODOS } from \"./actions\";\nvar initialState = {\n  todos: todosList\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        var newTodoArray = state.todos.slice();\n        newTodoArray.push(action.payload);\n        return {\n          todos: newTodoArray\n        };\n      }\n\n    case TOGGLE_TODO:\n      {\n        var newTodos = state.todos.slice();\n        var moreNewTodos = newTodos.map(function (todo) {\n          if (todo.id === action.payload) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        });\n        return {\n          todos: moreNewTodos\n        };\n      }\n\n    case DELETE_TODO:\n      {\n        var filteredArray = state.todos.filter(function (todo) {\n          if (todo.id === action.payload) {\n            return false;\n          }\n\n          return true;\n        });\n        return {\n          todos: filteredArray\n        };\n      }\n\n    case CLEAR_COMPLETED_TODOS:\n      {\n        var checkedToRemove = state.todos.filter(function (todo) {\n          if (todo.completed === true) {\n            return false;\n          }\n\n          return true;\n        });\n        return {\n          todos: checkedToRemove\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mistypacaco/Documents/assessment---todo-app-part-3/src/reducer.js"],"names":["todosList","ADD_TODO","TOGGLE_TODO","DELETE_TODO","CLEAR_COMPLETED_TODOS","initialState","todos","reducer","state","action","type","newTodoArray","slice","push","payload","newTodos","moreNewTodos","map","todo","id","completed","filteredArray","filter","checkedToRemove"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,qBAJJ,QAKO,WALP;AAOA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEN;AADU,CAArB;;AAKA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AAAe;AACX,YAAMU,YAAY,GAAGH,KAAK,CAACF,KAAN,CAAYM,KAAZ,EAArB;AACAD,QAAAA,YAAY,CAACE,IAAb,CAAkBJ,MAAM,CAACK,OAAzB;AACA,eAAO;AAAER,UAAAA,KAAK,EAAEK;AAAT,SAAP;AACH;;AACD,SAAKT,WAAL;AAAkB;AACd,YAAMa,QAAQ,GAAGP,KAAK,CAACF,KAAN,CAAYM,KAAZ,EAAjB;AACA,YAAMI,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,IAAI,EAAI;AACtC,cAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACK,OAAvB,EAAgC;AAC5BI,YAAAA,IAAI,CAACE,SAAL,GAAiB,CAACF,IAAI,CAACE,SAAvB;AACH;;AACD,iBAAOF,IAAP;AACH,SALoB,CAArB;AAMA,eAAO;AAAEZ,UAAAA,KAAK,EAAEU;AAAT,SAAP;AACH;;AACD,SAAKb,WAAL;AAAkB;AACd,YAAMkB,aAAa,GAAGb,KAAK,CAACF,KAAN,CAAYgB,MAAZ,CAAmB,UAAAJ,IAAI,EAAI;AAC7C,cAAIA,IAAI,CAACC,EAAL,KAAYV,MAAM,CAACK,OAAvB,EAAgC;AAC5B,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH,SALqB,CAAtB;AAMA,eAAO;AAAER,UAAAA,KAAK,EAAEe;AAAT,SAAP;AACH;;AACD,SAAKjB,qBAAL;AAA4B;AACxB,YAAMmB,eAAe,GAAGf,KAAK,CAACF,KAAN,CAAYgB,MAAZ,CAAmB,UAAAJ,IAAI,EAAI;AAC/C,cAAIA,IAAI,CAACE,SAAL,KAAmB,IAAvB,EAA6B;AACzB,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH,SALuB,CAAxB;AAMA,eAAO;AAAEd,UAAAA,KAAK,EAAEiB;AAAT,SAAP;AACH;;AACD;AACI,aAAOf,KAAP;AAnCR;AAqCH,CAtCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import todosList from \"./todos.json\";\nimport {\n    ADD_TODO,\n    TOGGLE_TODO,\n    DELETE_TODO,\n    CLEAR_COMPLETED_TODOS\n} from \"./actions\";\n\nconst initialState = {\n    todos: todosList\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const newTodoArray = state.todos.slice();\n            newTodoArray.push(action.payload);\n            return { todos: newTodoArray };\n        }\n        case TOGGLE_TODO: {\n            const newTodos = state.todos.slice();\n            const moreNewTodos = newTodos.map(todo => {\n                if (todo.id === action.payload) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            });\n            return { todos: moreNewTodos }\n        }\n        case DELETE_TODO: {\n            const filteredArray = state.todos.filter(todo => {\n                if (todo.id === action.payload) {\n                    return false;\n                }\n                return true;\n            });\n            return { todos: filteredArray };\n        }\n        case CLEAR_COMPLETED_TODOS: {\n            const checkedToRemove = state.todos.filter(todo => {\n                if (todo.completed === true) {\n                    return false;\n                }\n                return true;\n            });\n            return { todos: checkedToRemove };\n        }\n        default:\n            return state;\n    }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}