{"ast":null,"code":"import _classCallCheck from\"/Users/sophia/Desktop/todo-app-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sophia/Desktop/todo-app-project/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/sophia/Desktop/todo-app-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/sophia/Desktop/todo-app-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/sophia/Desktop/todo-app-project/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./index.css\";import todosList from\"./todos.json\";import{Route,NavLink}from\"react-router-dom\";import TodoList from\"./toDoList.js\";import{connect}from\"react-redux\";import{addTodo,clearCompletedTodos,toggleTodo}from\"./actions\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={todos:todosList};_this.handleRemoveChecked=function(event){_this.props.clearCompletedTodos();};_this.handleToggleComplete=function(event,todoIdToToggle){_this.props.toggleTodo();};_this.handleCreateTodo=function(event){if(event.key===\"Enter\"){_this.props.addTodo(event.target.value);event.target.value=\"\";}};return _this;}_createClass(App,[{key:\"handleItemsLeft\",value:function handleItemsLeft(){var itemsLeftArray=this.state.todos.filter(function(todo){if(todo.completed===true){return false;}return true;});return itemsLeftArray.length;}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"section\",{className:\"todoapp\"},React.createElement(\"header\",{className:\"header\"},React.createElement(\"h1\",null,\"todos\"),React.createElement(\"input\",{className:\"new-todo\",placeholder:\"What needs to be done?\",onKeyDown:this.handleCreateTodo,autoFocus:true})),React.createElement(Route,{exact:true,path:\"/\"},React.createElement(TodoList,{todos:this.props.todos})),React.createElement(Route,{exact:true,path:\"/active\",render:function render(){return React.createElement(TodoList,{todos:_this2.props.todos.filter(function(todo){return todo.completed===false;})});}}),React.createElement(Route,{exact:true,path:\"/completed\",render:function render(){return React.createElement(TodoList,{todos:_this2.props.todos.filter(function(todo){if(todo.completed===false){return false;}return true;})});}}),React.createElement(\"footer\",{className:\"footer\"},React.createElement(\"span\",{className:\"todo-count\"},React.createElement(\"strong\",null,this.handleItemsLeft()),\" item(s) left\"),React.createElement(\"ul\",{className:\"filters\"},React.createElement(\"li\",null,React.createElement(NavLink,{exact:true,to:\"/\",activeClassName:\"selected\"},\"All\")),React.createElement(\"li\",null,React.createElement(NavLink,{activeClassName:\"selected\",to:\"/active\"},\"Active\")),React.createElement(\"li\",null,React.createElement(NavLink,{activeClassName:\"selected\",to:\"/completed\"},\"Completed\"))),React.createElement(\"button\",{className:\"clear-completed\",onClick:this.handleRemoveChecked},\"Clear completed\")));}}]);return App;}(Component);var mapStateToProps=function mapStateToProps(state){return{todos:state.todos};};var mapDispatchToProps={addTodo:addTodo,clearCompletedTodos:clearCompletedTodos,toggleTodo:toggleTodo};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/sophia/Desktop/todo-app-project/src/App.js"],"names":["React","Component","todosList","Route","NavLink","TodoList","connect","addTodo","clearCompletedTodos","toggleTodo","App","state","todos","handleRemoveChecked","event","props","handleToggleComplete","todoIdToToggle","handleCreateTodo","key","target","value","itemsLeftArray","filter","todo","completed","length","handleItemsLeft","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport todosList from \"./todos.json\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport TodoList from \"./toDoList.js\";\nimport { connect } from \"react-redux\";\nimport {\n  addTodo,\n  clearCompletedTodos,\n  toggleTodo\n} from \"./actions\";\n\nclass App extends Component {\n  state = {\n    todos: todosList\n  };\n  handleRemoveChecked = event => {\n    this.props.clearCompletedTodos();\n  };\n  handleToggleComplete = (event, todoIdToToggle) => {\n    this.props.toggleTodo();\n  };\n  handleCreateTodo = event => {\n    if (event.key === \"Enter\") {\n      this.props.addTodo(event.target.value);\n      event.target.value = \"\";\n    }\n  };\n  handleItemsLeft() {\n    let itemsLeftArray = this.state.todos.filter(todo => {\n      if (todo.completed === true) {\n        return false;\n      }\n      return true;\n    });\n    return itemsLeftArray.length;\n  }\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown={this.handleCreateTodo}\n            autoFocus\n          />\n        </header>\n        <Route exact path=\"/\">\n          <TodoList todos={this.props.todos} />\n        </Route>\n        <Route\n          exact\n          path=\"/active\"\n          render={() => (\n            <TodoList\n              todos={this.props.todos.filter(todo => todo.completed === false)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/completed\"\n          render={() => (\n            <TodoList\n              todos={this.props.todos.filter(todo => {\n                if (todo.completed === false) {\n                  return false;\n                }\n                return true;\n              })}\n            />\n          )}\n        />\n        <footer className=\"footer\">\n          {/* <!-- This should be `0 items left` by default --> */}\n          <span className=\"todo-count\">\n            <strong>{this.handleItemsLeft()}</strong> item(s) left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <NavLink exact to=\"/\" activeClassName=\"selected\">\n                All\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"selected\" to=\"/active\">\n                Active\n              </NavLink>\n            </li>\n            <li>\n              <NavLink activeClassName=\"selected\" to=\"/completed\">\n                Completed\n              </NavLink>\n            </li>\n          </ul>\n          <button\n            className=\"clear-completed\"\n            onClick={this.handleRemoveChecked}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\nconst mapDispatchToProps = {\n  addTodo,\n  clearCompletedTodos,\n  toggleTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}